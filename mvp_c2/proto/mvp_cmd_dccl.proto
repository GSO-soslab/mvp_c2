syntax = "proto2";

import "dccl/option_extensions.proto";

    


message Joy{
    option (dccl.msg) = { codec_version: 4
                          id: 1
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    repeated double axes = 4 [ (dccl.field) = {min: -1.0 max: 1.0 precision: 2 max_repeat: 2 } ];
    repeated int32 buttons = 5 [ (dccl.field) = {min: -2 max: 2 precision: 0 max_repeat: 9 } ];
}

message PWM{
    option (dccl.msg) = { codec_version: 4
                          id: 2
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 index = 4 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required double data = 5 [ (dccl.field) = {min: -1.0 max: 1.0 precision: 2} ];
}

message Odometry{
    option (dccl.msg) = { codec_version: 4
        id: 3
        max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    repeated double position = 4 [ (dccl.field) = {min: -10000.0 max: 10000.0 precision: 2 max_repeat: 3 } ];
    repeated double orientation = 5 [ (dccl.field) = {min: -1.0 max: 1.0 precision: 2 max_repeat: 4 } ];
    repeated double uvw = 6 [ (dccl.field) = {min: -10.0 max: 10.0 precision: 2 max_repeat: 3 } ];
    repeated double pqr = 7 [ (dccl.field) = {min: -10.0 max: 10.0 precision: 2 max_repeat: 3 } ];

}

message GeoPose{
    option (dccl.msg) = { codec_version: 4
        id: 4
        max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    repeated double lla = 4 [ (dccl.field) = {min: -10000.0 max: 10000.0 precision: 2 max_repeat: 3 } ];
    repeated double orientation = 5 [ (dccl.field) = {min: -1.0 max: 1.0 precision: 2 max_repeat: 4 } ];
}


message SetPowerPort{
    option (dccl.msg) = { codec_version: 4
        id: 20
        max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    required int32 index = 4 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required bool state = 5 [ (dccl.field) = {min: 0 max: 2 precision: 0} ];
}

message ReportPowerPort{
    option (dccl.msg) = { codec_version: 4
                          id: 21
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    repeated bool state =4 [ (dccl.field) = {min: -1 max: 1 precision: 0 max_repeat: 10 } ];
}

//MVP mission and control related
//set controller true or false
message SetController{
    option (dccl.msg) = { codec_version: 4
                          id: 22
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    required bool status = 4 [ (dccl.field) = {min: -1.0 max: 1.0 precision: 0} ];
}

//report current controll status
message ReportController{
    option (dccl.msg) = { codec_version: 4
                          id: 23
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    required bool status = 4 [ (dccl.field) = {min: -1.0 max: 1.0 precision: 0} ];
}

//set helm to a specific state
message SetHelm{
    option (dccl.msg) = { codec_version: 4
                          id: 30
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    required string state = 4 [ (dccl.field) = {max_length: 9 } ];
}

//report current helm state
message ReportHelm{
    option (dccl.msg) = { codec_version: 4
                          id: 31
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    required string state = 4 [ (dccl.field) = {max_length: 9 } ];
}

//update waypoint in path3d
message SetWpt{
    option (dccl.msg) = { codec_version: 4
                          id: 32
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    required int32 wpt_size =4 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required double data = 5 [ (dccl.field) = {min: -10000.0 max: 10000.0 precision: 2 max_repeat: 30 } ];
}

//report current waypoint
message ReportWpt{
    option (dccl.msg) = { codec_version: 4
                          id: 33
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    required int32 wpt_size = 4 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required double data = 5 [ (dccl.field) = {min: -10000.0 max: 10000.0 precision: 2 max_repeat: 30 } ];
}


//systems related
message RosLaunch{
    option (dccl.msg) = { codec_version: 4
                          id: 40
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    required int32 index = 4 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required bool state = 5 [ (dccl.field) = {min: 0 max: 2 precision: 0} ];
}

message ReportRosLaunch{
    option (dccl.msg) = { codec_version: 4
                          id: 41
                          max_bytes: 32 };
    required double time = 1 [ (dccl.field) = {min: 1000000000 max: 2000000000 precision: 3} ];
    required int32 local_id = 2 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];
    required int32 remote_id = 3 [ (dccl.field) = {min: 0 max: 100 precision: 0} ];    
    repeated bool state =4 [ (dccl.field) = {min: -1 max: 1 precision: 0 max_repeat: 10 } ];
}



